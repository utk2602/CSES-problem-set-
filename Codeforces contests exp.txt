My first codeforces contest Div 3 (17-11-2024)
rating increased (+462)


///Codeforces round 991 DIV3(05-12-2024)


text ==(n words ) 
two strips     which can hold m characters  and as many as needed 
choose x so that x words in first strip and rest on the second strip 
words written iwthout gaps but each written entirely on one




import java.util.*;

public class Main {
    public static void main(String[] Args) {
        Scanner in = new Scanner(System.in);
        int t = in.nextInt();
        
        for (int i = 0; i < t; i++) {
            int n = in.nextInt();
            int m = in.nextInt();
            
            int[] wordlen = new int[n];
            for (int j = 0; j < n; j++) {
                wordlen[j] = in.next().length();
            }
            
            int s = 0;
            int ans = 0;
            
            for (int k = 0; k < n; k++) {
                if (s + wordlen[k] <= m) {
                    s += wordlen[k];
                    ans++;
                } else {
                    break;
                }
            }
            
            System.out.println(ans);
        }
        
        in.close();
    }
}







for question two we can run a nested loop but tle exceeded 
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int t = in.nextInt();
        
        for (int i = 0; i < t; i++) {
            int n = in.nextInt();
            int[] arr = new int[n];
            int s =0;
            for (int j = 0; j < n; j++) {
                arr[j] = in.nextInt();
                s+=arr[j];
            }
            String ans="Yes" ;
            if(s%n!=0){
                ans="NO";
            }
            int target = s/n;
            int excess=0;
            for(int k=0; k < n ; k ++){
                excess+=arr[k]-target;
            }
            if(excess<0){
                ans="No";
            }
            
            System.out.println(ans);
        }
    }
}


// upsolving all the question not solved yesterday 
transfusion 




if we consider each element to be either black or white then it can be realised 
a black element is always compared with a black element and a white element
is always considered with a white one 
and the sum of each color always remains the same 
average is also gonna remain the same 
that means the average of even positions and the average of odd positions remain the same 
soo the average had to be an integer as well as same for both the colors 


import java.util.*;
public class transfusion {
    public static void main(String[] Args){
        Scanner in = new Scanner(System.in);
        int t = in.nextInt();
        for(int i =0 ; i < t ; i ++){
            int  n = in.nextInt();
            String ans ="no";
            int[] arr = new int[n];int s1=0;int s2=0;int s =0;
            for(int j =0 ; j < n ;  j ++){
                arr[j]=in.nextInt();
                if(j%2==0){
                    s1+=arr[j];
                }else{
                    s2+=arr[j];
                }
                s+=arr[j];
            }
            int odd =0,even=0;
            if(s%n==0){
                if(n%2==0){
                    odd=n/2;
                    even=n/2;
                }else{
                    odd=(n+1)/2;
                    even = n-odd;
                }
                s/=n;
                if(s1== even*s && s2==odd*s){
                    ans="yes";
                }
            }
            System.out.println("ans");
        }
    }
}






//div 4 15-12-2024
q3 import java.util.Scanner;

public class InsaneProblem {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        StringBuilder output = new StringBuilder();

        while (t-- > 0) {
            long k = sc.nextLong();
            long l1 = sc.nextLong();
            long r1 = sc.nextLong();
            long l2 = sc.nextLong();
            long r2 = sc.nextLong();

            long count = 0;
            long power = 1;

            while (power <= r2) {
                long xMin = Math.max(l1, (l2 + power - 1) / power);
                long xMax = Math.min(r1, r2 / power);

                if (xMin <= xMax) {
                    count += (xMax - xMin + 1);
                }

                if (power > r2 / k) {
                    break;
                }
                power *= k;
            }

            output.append(count).append("\n");
        }

        System.out.print(output.toString());
        sc.close();
    }
}




q4


